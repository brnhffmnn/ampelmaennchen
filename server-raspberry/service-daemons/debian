#!/bin/sh

# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi

### BEGIN INIT INFO
# Provides:          Ampelmaennchen
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Ampelmaennchen init script
# Description:       Ampelmaennchen has an embedded webserver that will
#                    be started and stopped.
### END INIT INFO


DESC="Ampelmaennchen service"
NAME="ampelmaennchen"

CONFIG=/etc/default/ampelmaennchen/application.conf
PATH_TO_JAR=/usr/local/ampelmaennchen/application.jar

PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"
APPBIN=`which java`
APPARGS="-Dconfig.file=$CONFIG -jar $PATH_TO_JAR"

# Include functions
set -e
. /lib/lsb/init-functions

start() {
  echo "Starting $NAME ..."
  start-stop-daemon --start --background --make-pidfile --pidfile /var/run/$NAME.pid --exec "$APPBIN" -- $APPARGS || true
  printf "done\n"
}

stop() {
  printf "Stopping '$NAME'... "
  [ -z `cat /var/run/$NAME.pid 2>/dev/null` ] || \
  while test -d /proc/$(cat /var/run/$NAME.pid); do
    killtree $(cat /var/run/$NAME.pid) 15
    sleep 0.5
  done
  [ -z `cat /var/run/$NAME.pid 2>/dev/null` ] || rm /var/run/$NAME.pid
  printf "done\n"
}

# We need this function to ensure the whole process tree will be killed
killtree() {
  local _pid=$1
  local _sig=${2-TERM}
  for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
      killtree ${_child} ${_sig}
  done
  kill -${_sig} ${_pid}
}

status() {
  status_of_proc -p /var/run/$NAME.pid "" $NAME && exit 0 || exit $?
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
